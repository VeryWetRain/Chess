memberSearchIndex = [{"p":"pieces","c":"Bishop","l":"Bishop(int, int, String)","url":"%3Cinit%3E(int,int,java.lang.String)"},{"p":"pieces","c":"Board","l":"Board()","url":"%3Cinit%3E()"},{"p":"pieces","c":"Bishop","l":"check(Board, int, int)","url":"check(pieces.Board,int,int)"},{"p":"pieces","c":"King","l":"check(Board, int, int)","url":"check(pieces.Board,int,int)"},{"p":"pieces","c":"Knight","l":"check(Board, int, int)","url":"check(pieces.Board,int,int)"},{"p":"pieces","c":"Pawn","l":"check(Board, int, int)","url":"check(pieces.Board,int,int)"},{"p":"pieces","c":"Piece","l":"check(Board, int, int)","url":"check(pieces.Board,int,int)"},{"p":"pieces","c":"Queen","l":"check(Board, int, int)","url":"check(pieces.Board,int,int)"},{"p":"pieces","c":"Rook","l":"check(Board, int, int)","url":"check(pieces.Board,int,int)"},{"p":"pieces","c":"Board","l":"check(boolean)"},{"p":"pieces","c":"Board","l":"checkMate(Board, boolean)","url":"checkMate(pieces.Board,boolean)"},{"p":"chess","c":"Chess","l":"Chess()","url":"%3Cinit%3E()"},{"p":"pieces","c":"Piece","l":"color"},{"p":"pieces","c":"Board","l":"double_stepped_black"},{"p":"pieces","c":"Board","l":"double_stepped_white"},{"p":"pieces","c":"Board","l":"getBoard()"},{"p":"pieces","c":"Board","l":"getCheck()"},{"p":"pieces","c":"Board","l":"getCheckmate()"},{"p":"pieces","c":"Knight","l":"getColor()"},{"p":"pieces","c":"Piece","l":"getColor()"},{"p":"pieces","c":"King","l":"getMoved()"},{"p":"pieces","c":"Rook","l":"getMoved()"},{"p":"pieces","c":"Board","l":"getPiece(int, int)","url":"getPiece(int,int)"},{"p":"pieces","c":"King","l":"King(int, int, String)","url":"%3Cinit%3E(int,int,java.lang.String)"},{"p":"pieces","c":"Knight","l":"Knight(int, int, String)","url":"%3Cinit%3E(int,int,java.lang.String)"},{"p":"chess","c":"Chess","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"pieces","c":"Pawn","l":"move(Board, int, int, String)","url":"move(pieces.Board,int,int,java.lang.String)"},{"p":"pieces","c":"Piece","l":"move(Board, int, int, String)","url":"move(pieces.Board,int,int,java.lang.String)"},{"p":"pieces","c":"Bishop","l":"move(Board, int, int)","url":"move(pieces.Board,int,int)"},{"p":"pieces","c":"King","l":"move(Board, int, int)","url":"move(pieces.Board,int,int)"},{"p":"pieces","c":"Knight","l":"move(Board, int, int)","url":"move(pieces.Board,int,int)"},{"p":"pieces","c":"Pawn","l":"move(Board, int, int)","url":"move(pieces.Board,int,int)"},{"p":"pieces","c":"Piece","l":"move(Board, int, int)","url":"move(pieces.Board,int,int)"},{"p":"pieces","c":"Queen","l":"move(Board, int, int)","url":"move(pieces.Board,int,int)"},{"p":"pieces","c":"Rook","l":"move(Board, int, int)","url":"move(pieces.Board,int,int)"},{"p":"pieces","c":"Pawn","l":"Pawn(int, int, String)","url":"%3Cinit%3E(int,int,java.lang.String)"},{"p":"pieces","c":"Piece","l":"Piece()","url":"%3Cinit%3E()"},{"p":"chess","c":"Chess","l":"printBoard(Piece[][])","url":"printBoard(pieces.Piece[][])"},{"p":"pieces","c":"Queen","l":"Queen(int, int, String)","url":"%3Cinit%3E(int,int,java.lang.String)"},{"p":"pieces","c":"Rook","l":"Rook(int, int, String)","url":"%3Cinit%3E(int,int,java.lang.String)"},{"p":"pieces","c":"Board","l":"setBKing(int, int)","url":"setBKing(int,int)"},{"p":"pieces","c":"Board","l":"setCheck(boolean)"},{"p":"pieces","c":"Board","l":"setWKing(int, int)","url":"setWKing(int,int)"},{"p":"pieces","c":"Bishop","l":"toString()"},{"p":"pieces","c":"King","l":"toString()"},{"p":"pieces","c":"Knight","l":"toString()"},{"p":"pieces","c":"Pawn","l":"toString()"},{"p":"pieces","c":"Queen","l":"toString()"},{"p":"pieces","c":"Rook","l":"toString()"},{"p":"pieces","c":"Piece","l":"xPos"},{"p":"pieces","c":"Piece","l":"yPos"}]